# ========================================
# Retail Discount Service - Docker Compose
# ========================================

services:
  # ========================================
  # MongoDB Database
  # ========================================
  mongodb:
    image: mongo:7.0-jammy
    container_name: retail-discount-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin123
      MONGO_INITDB_DATABASE: retail_discount
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
      # Initialize database script (optional)
      - ./docker/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - retail-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # ========================================
  # Spring Boot Application
  # ========================================
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: retail-discount-service:latest
    container_name: retail-discount-app
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      # Spring Profile
      SPRING_PROFILES_ACTIVE: docker

      # MongoDB Connection (using service name)
      SPRING_DATA_MONGODB_URI: mongodb://admin:admin123@mongodb:27017/retail_discount?authSource=admin

      # Application Configuration
      SERVER_PORT: 8080

      # Security Configuration
      SPRING_SECURITY_USER_NAME: admin
      SPRING_SECURITY_USER_PASSWORD: admin

      # Logging
      LOGGING_LEVEL_ROOT: INFO
      LOGGING_LEVEL_COM_RETAIL_DISCOUNT: DEBUG

      # JVM Options for container
      JAVA_OPTS: >-
        -XX:+UseContainerSupport
        -XX:MaxRAMPercentage=75.0
        -XX:InitialRAMPercentage=50.0
        -XX:+UseG1GC
        -XX:+UseStringDeduplication
        -Djava.security.egd=file:/dev/./urandom
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - retail-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 60s
    volumes:
      # Mount logs directory (optional)
      - ./logs:/app/logs

  # ========================================
  # Mongo Express (Web UI for MongoDB)
  # Optional: Comment out if not needed
  # ========================================
  mongo-express:
    image: mongo-express:1.0-20-alpine3.19
    container_name: retail-discount-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: admin123
      ME_CONFIG_MONGODB_URL: mongodb://admin:admin123@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - retail-network

# ========================================
# Networks
# ========================================
networks:
  retail-network:
    driver: bridge
    name: retail-discount-network

# ========================================
# Volumes
# ========================================
volumes:
  mongodb_data:
    name: retail-discount-mongodb-data
    driver: local
  mongodb_config:
    name: retail-discount-mongodb-config
    driver: local